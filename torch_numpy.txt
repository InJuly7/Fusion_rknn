# Pre-process
# torch,PIL code
# visible images RGB channel 
if vis_flage:
    img_vis = Image.open(path).convert('RGB')
    img_vis = torch.ByteTensor(torch.ByteStorage.from_buffer(img_vis.tobytes()))
    # WHC->HWC
    img_vis = img.view(img_vis.size[1],img_vis.size[0],len(img_vis.getbands()))
    # HWC->CHW
    img_vis = img.permute((2,0,1)).contiguous()
    img_vis = img_vis.float().div(255)
else:
    img_ir =  Image.open(path).convert('L') 
    img_ir = torch.ByteTensor(torch.ByteStorage.from_buffer(img_ir.tobytes()))
    # WH->HWC 
    img_ir = img.view(img_ir.size[1],img_ir.size[0],len(img_ir.getbands())) 
    # HWC->CHW 
    img_ir = img.permute((2,0,1)).contiguous() 
    img_ir = img_ir.float().div(255)
# -->
# numpy,cv2 code
if vis_flag:
    img_vis = cv2.imread(path)
    img_vis = cv2.cvtColor(img_vis, cv2.COLOR_BGR2RGB)
    img_vis = np.array(img_vis)
    img_vis = np.transpose(img_vis, (2,0,1))
    img_vis = img_vis.astype(np.float32)/255.0
else: 
    img_ir = cv2.imread(path, cv2.IMREAD_GRAYSCALE)
    img_ir= np.array(img_ir)
    img_ir = np.transpose(img_ir, (2,0,1))
    img_ir = img_vis.astype(np.float)/255.0


# Pre-process
# torch:vis_17.png
0 : tensor([[[[0.0863, 0.0863, 0.0706,  ..., 0.0745, 0.0706, 0.0745],
          [0.0902, 0.0863, 0.0706,  ..., 0.0745, 0.0784, 0.0706],
          [0.0863, 0.0863, 0.0824,  ..., 0.0667, 0.0627, 0.0706],
          ...,
          [0.0863, 0.0863, 0.0824,  ..., 0.0706, 0.0627, 0.0824],
          [0.0863, 0.0784, 0.0863,  ..., 0.0824, 0.0745, 0.0745],
          [0.0824, 0.0784, 0.0824,  ..., 0.0784, 0.0745, 0.0706]],

         [[0.0863, 0.0863, 0.0706,  ..., 0.0745, 0.0706, 0.0745],
          [0.0902, 0.0863, 0.0706,  ..., 0.0745, 0.0784, 0.0706],
          [0.0863, 0.0863, 0.0824,  ..., 0.0667, 0.0627, 0.0706],
          ...,
          [0.0863, 0.0863, 0.0824,  ..., 0.0706, 0.0627, 0.0824],
          [0.0863, 0.0784, 0.0863,  ..., 0.0824, 0.0745, 0.0745],
          [0.0824, 0.0784, 0.0824,  ..., 0.0784, 0.0745, 0.0706]],

         [[0.0863, 0.0863, 0.0706,  ..., 0.0745, 0.0706, 0.0745],
          [0.0902, 0.0863, 0.0706,  ..., 0.0745, 0.0784, 0.0706],
          [0.0863, 0.0863, 0.0824,  ..., 0.0667, 0.0627, 0.0706],
          ...,
          [0.0863, 0.0863, 0.0824,  ..., 0.0706, 0.0627, 0.0824],
          [0.0863, 0.0784, 0.0863,  ..., 0.0824, 0.0745, 0.0745],
          [0.0824, 0.0784, 0.0824,  ..., 0.0784, 0.0745, 0.0706]]]])

# numpy:vis_17.png
0 : ndarray[[[[0.08627451 0.08627451 0.07058824 ... 0.07450981 0.07058824
    0.07450981]
   [0.09019608 0.08627451 0.07058824 ... 0.07450981 0.07843138
    0.07058824]
   [0.08627451 0.08627451 0.08235294 ... 0.06666667 0.0627451 
    0.07058824]
   ...
   [0.08627451 0.08627451 0.08235294 ... 0.07058824 0.0627451 
    0.08235294]
   [0.08627451 0.07843138 0.08627451 ... 0.08235294 0.07450981
    0.07450981]
   [0.08235294 0.07843138 0.08235294 ... 0.07843138 0.07450981
    0.07058824]]

  [[0.08627451 0.08627451 0.07058824 ... 0.07450981 0.07058824
    0.07450981]
   [0.09019608 0.08627451 0.07058824 ... 0.07450981 0.07843138
    0.07058824]
   [0.08627451 0.08627451 0.08235294 ... 0.06666667 0.0627451 
    0.07058824]
   ...
   [0.08627451 0.08627451 0.08235294 ... 0.07058824 0.0627451 
    0.08235294]
   [0.08627451 0.07843138 0.08627451 ... 0.08235294 0.07450981
    0.07450981]
   [0.08235294 0.07843138 0.08235294 ... 0.07843138 0.07450981
    0.07058824]]

  [[0.08627451 0.08627451 0.07058824 ... 0.07450981 0.07058824
    0.07450981]
   [0.09019608 0.08627451 0.07058824 ... 0.07450981 0.07843138
    0.07058824]
   [0.08627451 0.08627451 0.08235294 ... 0.06666667 0.0627451
    0.07058824]
   ...
   [0.08627451 0.08627451 0.08235294 ... 0.07058824 0.0627451
    0.08235294]
   [0.08627451 0.07843138 0.08627451 ... 0.08235294 0.07450981
    0.07450981]
   [0.08235294 0.07843138 0.08235294 ... 0.07843138 0.07450981
    0.07058824]]]]

# torch:ir_17.png
0 : tensor([[[[0.8078, 0.7882, 0.7647,  ..., 1.0000, 1.0000, 1.0000],
          [0.7569, 0.7529, 0.7451,  ..., 1.0000, 1.0000, 1.0000],
          [0.7333, 0.7333, 0.7294,  ..., 1.0000, 1.0000, 1.0000],
          ...,
          [0.4196, 0.4196, 0.4196,  ..., 0.6471, 0.6902, 0.6824],
          [0.4235, 0.4353, 0.4471,  ..., 0.6863, 0.7137, 0.7059],
          [0.4157, 0.4353, 0.4549,  ..., 0.7176, 0.7294, 0.7333]]]])

#numpy:ir_17.png
0 : ndarray[[[[0.80784315 0.7882353  0.7647059  ... 1.         1.
    1.        ]
   [0.75686276 0.7529412  0.74509805 ... 1.         1.
    1.        ]
   [0.73333335 0.73333335 0.7294118  ... 1.         1.
    1.        ]
   ...
   [0.41960785 0.41960785 0.41960785 ... 0.64705884 0.6901961
    0.68235296]
   [0.42352942 0.43529412 0.44705883 ... 0.6862745  0.7137255
    0.7058824 ]
   [0.41568628 0.43529412 0.45490196 ... 0.7176471  0.7294118
    0.73333335]]]]


# 网络输出:
# torch 
0 : tensor([[[[0.5365, 0.5419, 0.5151,  ..., 0.6786, 0.7296, 0.5472],
          [0.6499, 0.7815, 0.7325,  ..., 0.9128, 0.9561, 0.7128],
          [0.6372, 0.7197, 0.6607,  ..., 0.9257, 0.9599, 0.6641],
          ...,
          [0.4096, 0.4362, 0.4184,  ..., 0.6283, 0.7003, 0.5146],
          [0.3653, 0.4384, 0.4665,  ..., 0.7544, 0.8047, 0.5698],
          [0.3801, 0.3835, 0.4192,  ..., 0.6886, 0.6812, 0.5323]]]],
       device='cuda:0')

# numpy
0 : ndarray(array([[[[0.53648585, 0.5419277 , 0.51509845, ..., 0.67855895,
          0.7296098 , 0.547167  ],
         [0.6498865 , 0.7814803 , 0.7324977 , ..., 0.9127506 , 
          0.9561093 , 0.7127707 ],
         [0.6372269 , 0.71973026, 0.66071236, ..., 0.9257111 , 
          0.95989573, 0.66410017],
         ...,
         [0.4096428 , 0.43623602, 0.41843933, ..., 0.62827694,
          0.7002869 , 0.5146215 ],
         [0.36529237, 0.43841222, 0.46652758, ..., 0.75442004,
          0.8046768 , 0.5698206 ],
         [0.3801224 , 0.38347405, 0.41920322, ..., 0.68859315,
          0.68117523, 0.53225   ]]]], dtype=float32),)

# tensor fused_img
0 : tensor([[[[0.5365, 0.5419, 0.5151,  ..., 0.6786, 0.7296, 0.5472],
          [0.6499, 0.7815, 0.7325,  ..., 0.9128, 0.9561, 0.7128],
          [0.6372, 0.7197, 0.6607,  ..., 0.9257, 0.9599, 0.6641],
          ...,
          [0.4096, 0.4362, 0.4184,  ..., 0.6283, 0.7003, 0.5146],
          [0.3653, 0.4384, 0.4665,  ..., 0.7544, 0.8047, 0.5698],
          [0.3801, 0.3835, 0.4192,  ..., 0.6886, 0.6812, 0.5323]],

         [[0.5365, 0.5419, 0.5151,  ..., 0.6786, 0.7296, 0.5472],
          [0.6499, 0.7815, 0.7325,  ..., 0.9128, 0.9561, 0.7128],
          [0.6372, 0.7197, 0.6607,  ..., 0.9257, 0.9599, 0.6641],
          ...,
          [0.4096, 0.4362, 0.4184,  ..., 0.6283, 0.7003, 0.5146],
          [0.3653, 0.4384, 0.4665,  ..., 0.7544, 0.8047, 0.5698],
          [0.3801, 0.3835, 0.4192,  ..., 0.6886, 0.6812, 0.5323]],

         [[0.5365, 0.5419, 0.5151,  ..., 0.6786, 0.7296, 0.5472],
          [0.6499, 0.7815, 0.7325,  ..., 0.9128, 0.9561, 0.7128],
          [0.6372, 0.7197, 0.6607,  ..., 0.9257, 0.9599, 0.6641],
          ...,
          [0.4096, 0.4362, 0.4184,  ..., 0.6283, 0.7003, 0.5146],
          [0.3653, 0.4384, 0.4665,  ..., 0.7544, 0.8047, 0.5698],
          [0.3801, 0.3835, 0.4192,  ..., 0.6886, 0.6812, 0.5323]]]],
       device='cuda:0')


# numpy fused_img
0 : ndarray[[[0.53648585 0.5419277  0.51509845 ... 0.67855895 0.72960979 0.547167  ]  
  [0.64988649 0.78148031 0.73249769 ... 0.9127506  0.95610929 0.7127707 ]  
  [0.63722688 0.71973026 0.66071236 ... 0.9257111  0.95989573 0.66410017]  
  ...
  [0.40964279 0.43623602 0.41843933 ... 0.62827694 0.70028692 0.5146215 ]  
  [0.36529237 0.43841222 0.46652758 ... 0.75442004 0.80467677 0.56982058]  
  [0.38012239 0.38347405 0.41920322 ... 0.68859315 0.68117523 0.53224999]] 

 [[0.53648585 0.5419277  0.51509845 ... 0.67855895 0.72960979 0.547167  ]  
  [0.64988649 0.78148031 0.73249769 ... 0.9127506  0.95610929 0.7127707 ]  
  [0.63722688 0.71973026 0.66071236 ... 0.9257111  0.95989573 0.66410017]  
  ...
  [0.40964279 0.43623602 0.41843933 ... 0.62827694 0.70028692 0.5146215 ]  
  [0.36529237 0.43841222 0.46652758 ... 0.75442004 0.80467677 0.56982058]  
  [0.38012239 0.38347405 0.41920322 ... 0.68859315 0.68117523 0.53224999]] 

 [[0.53648585 0.5419277  0.51509845 ... 0.67855895 0.72960979 0.547167  ]  
  [0.64988649 0.78148031 0.73249769 ... 0.9127506  0.95610929 0.7127707 ]  
  [0.63722688 0.71973026 0.66071236 ... 0.9257111  0.95989573 0.66410017]  
  ...
  [0.40964279 0.43623602 0.41843933 ... 0.62827694 0.70028692 0.5146215 ]  
  [0.36529237 0.43841222 0.46652758 ... 0.75442004 0.80467677 0.56982058]  
  [0.38012239 0.38347405 0.41920322 ... 0.68859315 0.68117523 0.53224999]]]




00858N  
# 网络输出 1，480，640
array([[[0.5124808 , 0.5134104 , 0.48082525, ..., 0.06911111,
         0.07499146, 0.17726448],
        [0.59531254, 0.6118419 , 0.547845  , ..., 0.06981054,
         0.06884238, 0.09544131],
        [0.6714736 , 0.6875309 , 0.6998967 , ..., 0.07944921,
         0.06818804, 0.07133383],
        ...,
        [0.06105343, 0.06380704, 0.06994095, ..., 0.10229224,
         0.06463057, 0.0708887 ],
        [0.0629262 , 0.04845059, 0.06254867, ..., 0.07180658,
         0.0548915 , 0.0785073 ],
        [0.1160031 , 0.06250429, 0.05755943, ..., 0.07287753,
         0.09007055, 0.15263292]]], dtype=float32)
# 网络输出 1,1,480,640
tensor([[[[0.5125, 0.5134, 0.4808,  ..., 0.0691, 0.0750, 0.1773],
          [0.5953, 0.6118, 0.5478,  ..., 0.0698, 0.0688, 0.0954],
          [0.6715, 0.6875, 0.6999,  ..., 0.0794, 0.0682, 0.0713],
          ...,
          [0.0611, 0.0638, 0.0699,  ..., 0.1023, 0.0646, 0.0709],
          [0.0629, 0.0485, 0.0625,  ..., 0.0718, 0.0549, 0.0785],
          [0.1160, 0.0625, 0.0576,  ..., 0.0729, 0.0901, 0.1526]]]],
       device='cuda:0')

YCbCr2RGB 输出：(3,480,640)
array([[[0.41986237, 0.42079196, 0.37538785, ..., 0.06275283,
         0.06863318, 0.1709062 ],
        [0.50269411, 0.51922349, 0.44240761, ..., 0.06345226,
         0.0624841 , 0.08908303],
        [0.55160062, 0.56765787, 0.56445546, ..., 0.06759222,
         0.05633106, 0.05947684],
        ...,
        [0.05469514, 0.05744876, 0.06358267, ..., 0.10236048,
         0.06559251, 0.07185064],
        [0.05656792, 0.04209231, 0.05619038, ..., 0.07187482,
         0.05585344, 0.07946925],
        [0.10964481, 0.05614601, 0.05120115, ..., 0.07294576,
         0.09103249, 0.15359486]],

       [[0.55273507, 0.55366467, 0.52772921, ..., 0.07527959,
         0.08115994, 0.18343296],
        [0.63556681, 0.6520962 , 0.59474897, ..., 0.07597902,
         0.07501086, 0.10160979],
        [0.73789336, 0.75395061, 0.77425559, ..., 0.08819672,
         0.07693556, 0.08008134],
        ...,
        [0.0672219 , 0.06997552, 0.07610943, ..., 0.10608375,
         0.06672841, 0.07298654],
        [0.06909468, 0.05461907, 0.06871714, ..., 0.07559809,
         0.05698933, 0.08060514],
        [0.12217157, 0.06867277, 0.06372791, ..., 0.07666904,
         0.09216838, 0.15473076]],

       [[0.5479414 , 0.54887099, 0.51563645, ..., 0.05399584,
         0.05987619, 0.16214921],
        [0.63077314, 0.64730252, 0.58265621, ..., 0.05469527,
         0.05372711, 0.08032604],
        [0.64356316, 0.65962041, 0.671902  , ..., 0.06546422,
         0.05420306, 0.05734884],
        ...,
        [0.04593815, 0.04869177, 0.05482568, ..., 0.08257153,
         0.05129504, 0.05755317],
        [0.04781093, 0.03333532, 0.04743339, ..., 0.05208587,
         0.04155597, 0.06517177],
        [0.10088782, 0.04738902, 0.04244416, ..., 0.05315681,
         0.07673501, 0.13929739]]])

YCbCr2RGB
tensor([[[[0.5405, 0.5415, 0.5084,  ..., 0.0572, 0.0630, 0.1653],
          [0.6234, 0.6399, 0.5754,  ..., 0.0578, 0.0569, 0.0835],
          [0.6494, 0.6654, 0.6777,  ..., 0.0684, 0.0571, 0.0603],
          ...,
          [0.0491, 0.0518, 0.0580,  ..., 0.0867, 0.0541, 0.0603],
          [0.0510, 0.0365, 0.0506,  ..., 0.0562, 0.0443, 0.0680],
          [0.1040, 0.0505, 0.0456,  ..., 0.0573, 0.0795, 0.1421]],

         [[0.5209, 0.5218, 0.4927,  ..., 0.0768, 0.0826, 0.1849],
          [0.6037, 0.6203, 0.5597,  ..., 0.0775, 0.0765, 0.1031],
          [0.7121, 0.7282, 0.7444,  ..., 0.0880, 0.0767, 0.0799],
          ...,
          [0.0687, 0.0715, 0.0776,  ..., 0.1102, 0.0698, 0.0760],
          [0.0706, 0.0561, 0.0702,  ..., 0.0797, 0.0600, 0.0836],
          [0.1236, 0.0702, 0.0652,  ..., 0.0808, 0.0952, 0.1578]],

         [[0.3954, 0.3964, 0.3476,  ..., 0.0611, 0.0670, 0.1692],
          [0.4783, 0.4948, 0.4146,  ..., 0.0618, 0.0608, 0.0874],
          [0.5200, 0.5360, 0.5287,  ..., 0.0645, 0.0532, 0.0563],
          ...,
          [0.0530, 0.0558, 0.0619,  ..., 0.1024, 0.0658, 0.0721],
          [0.0549, 0.0404, 0.0545,  ..., 0.0719, 0.0561, 0.0797],
          [0.1080, 0.0545, 0.0495,  ..., 0.0730, 0.0913, 0.1538]]]],
       device='cuda:0')





  
  array([[[137, 132, 100],
        [138, 133, 101],
        [129, 125,  88],
        ...,
        [ 14,  19,  15],
        [ 16,  21,  17],
        [ 42,  47,  43]],

       [[158, 153, 121],
        [163, 158, 126],
        [146, 142, 105],
        ...,
        [ 14,  19,  15],
        [ 14,  19,  15],
        [ 21,  26,  22]],

       [[165, 181, 132],
        [169, 185, 136],
        [172, 189, 134],
        ...,
        [ 17,  22,  16],
        [ 14,  19,  13],
        [ 15,  20,  14]],

       ...,

       [[ 12,  17,  13],
        [ 13,  18,  14],
        [ 14,  19,  15],
        ...,
        [ 22,  28,  26],
        [ 13,  17,  16],
        [ 15,  19,  18]],

       [[ 12,  17,  13],
        [  9,  14,  10],
        [ 12,  17,  13],
        ...,
        [ 14,  20,  18],
        [ 11,  15,  14],
        [ 17,  21,  20]],

       [[ 26,  31,  27],
        [ 12,  17,  13],
        [ 11,  16,  12],
        ...,
        [ 14,  20,  18],
        [ 20,  24,  23],
        [ 36,  40,  39]]], dtype=uint8)